name: Validate PR Template Checkboxes

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]
    branches: [main]

jobs:
  validate-required-checkboxes:
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR checklist
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Configuration: section headers and minimum checked items required
            const checks = [
              { header: "## Types of changes", minChecked: 1 },
              { header: "## Details of changes", minChecked: 1 },
              { header: "## Dev Checklist", minChecked: 5 },
              { header: "## This Change Needs APIM Update?", minChecked: 1 },
              { header: "## Pipeline", minChecked: 3 },
              { header: "## Deployment labels added", minChecked: 1 },
            ];
            
            // Only count lowercase x as per original pattern "- [x]"
            const checkedBoxRegex = /- \[x\]/g;
            
            // Get the latest PR body from the API (more reliable than context.payload in some events)
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
            const body = pr.body || "";
            
            // Helper to extract a section body by header until the next header of same/larger level
            function extractSection(markdown, headerText) {
              // Match the exact header line (start of line, optional spaces), then capture until next header (## or #) or end
              const headerPattern = new RegExp(
                String.raw`(^|\n)\s*${headerText.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')}\s*\n` +
                String.raw`([\s\S]*?)(?=\n\s*#{1,6}\s|$)`,
                'i'
              );
              const m = markdown.match(headerPattern);
              return m ? m[2] : null;
            }
            
            let failures = [];
            
            for (const { header, minChecked } of checks) {
              const section = extractSection(body, header);
              if (section === null) {
                failures.push(`Missing section header: "${header}"`);
                continue;
              }
              const matches = section.match(checkedBoxRegex);
              const count = matches ? matches.length : 0;
              if (count < minChecked) {
                failures.push(`Section "${header}": requires at least ${minChecked} checked item(s), but found ${count}.`);
              }
            }
            
            if (failures.length) {
              core.setFailed('PR checklist validation failed:\n' + failures.map(f => `- ${f}`).join('\n'));
            } else {
              core.info('All required checklist sections and minimum checked items are satisfied.');
            }